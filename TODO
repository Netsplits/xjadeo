TODO < 0.4
-----------

* OSD: render current offset ('-o', ts_offset) on screen.

* keystrokes to adjust offset: eg. press key '-' '+' sub/add a frame. 
  and toggle OSD.
   
* fix X11 - re-open window.

* http://lash.nongnu.org/ support
  - restore window position.  (maybe > 0.4)
    (depends on X11/SDL 'get window position' see below)

* update the build information in the .spec.in 

* qjadeo
 - specify midi device to use
 - allow to set offset + seek to as frame-int or SMPTE string.


TODO > 0.4.0
-------------
* mq:
   - FIX multiple remote clients one xjadeo -> who gets the replies ? 
   - multi drop queues and mq_notify()
   - multiple instances - named message queues + list of avail queues.

* ratain aspect ratio  - letterbox option for imlib (+ SDL? )

MIDI:
  - alsamidi - catch port re-assignments and remember em ?
    don't clash with check with lash+qjackctl !


TODO - next major version: 
------------------------------------------------
* exact sync
 decode one frame ahead and use
 Xv/Xext -> VSYNC raster interrupt to trigger double buffer flip

* option: don't poll for jack-time but register as jack-audio client
  -> jack will call xjadeo in a RT callback.

* option: modularize time-sync + video-source 
  (send time information via message queues)

* vacuum the code and clean the bath tub.

* translations and internationalization ?!


TODO - legacy and low priority issues / ideas
---------------------------------------------
  DISPLAY:

 - getwindow position 

 - SDL RGB SWSURFACE (new videomode)

 - speed up YUV trancoding -
   have ffmpeg decode directly to shared-mem...

 - put xjadeo-session name in window title ? 
   add some info and markups to the title (on top, offset, smpte)

 - freetype font config. outline font? color, xposition.

  MIDI:

 - portmidi: error handling (portmidi aborts on error)

 - jack midi 

  REMOTE: 
 - keyboard events. (-> generate remote msgs)
 - notify key event ?? (have client handle keystrokes on the xjadeo window)
   internal (default) key press handler if no-bidir remote ctrl.
   map key event to command 

  OTHER:
 - check cpu load - dynamically increase delay if above threshold.

